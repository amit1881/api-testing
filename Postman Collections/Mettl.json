{
  "info": {
    "_postman_id": "7732fe53-4df8-f164-459d-ee7892eff07f",
    "name": "Mettl",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "8b0759bd-3fa8-a375-54d5-c2648ca63d5e",
      "name": "result",
      "description": "",
      "item": [
        {
          "_postman_id": "5be4119a-0abb-f0f4-1ae8-71c3fd0b6291",
          "name": "http://api.mettl.com/v1/schedules/f03cbb34/candidates?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&ir={{qr_options}}&limit={{result_limit}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var url=environment.url+\"/schedules/\"+environment.accesskey+\"/candidates\";",
                  "var method=\"GET\";",
                  "var limit=\"20\";",
                  "var ir='{\"recommendation\":true}';",
                  "var params=ir+\"\\n\"+limit;",
                  "var signature=Utils.generateSignature(method,url,params,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);",
                  "postman.setGlobalVariable(\"ir_options\",ir);",
                  "postman.setGlobalVariable(\"result_limit\",limit);",
                  "//xyz---access key-----476171c6",
                  "//prod--access key-----ffb76d59"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/schedules/{{accesskey}}/candidates?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&ir={{ir_options}}&limit={{result_limit}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "schedules",
                "{{accesskey}}",
                "candidates"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "ir",
                  "value": "{{ir_options}}",
                  "equals": true
                },
                {
                  "key": "limit",
                  "value": "{{result_limit}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "b187bb7b-2d21-3ce1-918b-654edd2325e7",
          "name": "http://api.mettl.com/v1/schedules/477d5acb/candidates?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&ir={{ir_options}} copy",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);",
                  "var ak=\"d3aeeeb4-3b33-4612-a1ec-89bd28dee5a4\";",
                  "var pk=\"49d523ab-cb8b-4279-9762-7f85fe188658\";",
                  "var url=\"http://api.mettl.com/v1/schedules/477d5acb/candidates\";",
                  "var method=\"GET\";",
                  "var ir='{\"recommendation\":true}';",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+ir+\"\\n\"+ts;",
                  "var hash = CryptoJS.HmacSHA1(str, pk);",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);",
                  "postman.setGlobalVariable(\"timestamp\", ts);",
                  "postman.setGlobalVariable(\"apikey\", ak);",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);",
                  "postman.setGlobalVariable(\"ir_options\",ir);"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "http://api.mettl.com/v1/schedules/477d5acb/candidates?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&ir={{ir_options}}",
              "protocol": "http",
              "host": [
                "api",
                "mettl",
                "com"
              ],
              "path": [
                "v1",
                "schedules",
                "477d5acb",
                "candidates"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}"
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}"
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}"
                },
                {
                  "key": "ir",
                  "value": "{{ir_options}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "180dcdb0-acc7-cfe7-b0f7-3818d50b0c29",
          "name": "http://api.mettl.xyz/v1/schedules/df0f3fa9/candidates?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&ir={{ir_options}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);",
                  "var ak=\"4114543f-50b3-4fa5-9466-2085be682f93\";",
                  "var pk=\"b2030773-8331-4402-a84b-9e4d88b41b50\";",
                  "var url=\"http://api.mettl.xyz/v1/schedules/250a46d5/candidates\";",
                  "var method=\"GET\";",
                  "var ir='{\"recommendation\":true}';",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+ir+\"\\n\"+ts;",
                  "var hash = CryptoJS.HmacSHA1(str, pk);",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);",
                  "postman.setGlobalVariable(\"timestamp\", ts);",
                  "postman.setGlobalVariable(\"apikey\", ak);",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);",
                  "postman.setGlobalVariable(\"ir_options\",ir);"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "http://api.mettl.xyz/v1/schedules/250a46d5/candidates?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&ir={{ir_options}}",
              "protocol": "http",
              "host": [
                "api",
                "mettl",
                "xyz"
              ],
              "path": [
                "v1",
                "schedules",
                "250a46d5",
                "candidates"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "ir",
                  "value": "{{ir_options}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "b28604ce-dcce-54ff-a772-a5f650966b54",
          "name": "{{url}}/schedules/{{accesskey}}/candidates/{{candidate_email_id}}?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&ir={{ir_options}}&limit={{result_limit}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "47139c0b-29b1-4dde-a687-5d6daaefed3f",
                "type": "text/javascript",
                "exec": [
                  "Utils ={",
                  "    generateTimeStamp: function(){",
                  "                        console.log(new Date());",
                  "                        console.log((new Date()).getTime());",
                  "                        console.log((new Date()).getTime()/1000);",
                  "                        var ts = Math.round((new Date()).getTime() / 1000);",
                  "                        return ts;",
                  "                    },",
                  "                    ",
                  "    generateSignature: function(request_method,request_url,request_params,api_key,private_key,time_stamp){",
                  "                                var str;",
                  "                                if(request_params===null){",
                  "                                    str=request_method+request_url+\"\\n\"+api_key+\"\\n\"+time_stamp;",
                  "                                }",
                  "                                else{",
                  "                                    str=request_method+request_url+\"\\n\"+api_key+\"\\n\"+request_params+\"\\n\"+time_stamp;",
                  "                                }",
                  "                        ",
                  "                                var hash = CryptoJS.HmacSHA1(str, private_key);",
                  "                                console.log(hash);",
                  "                                var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);",
                  "                                console.log(hashInBase64);",
                  "                                    return hashInBase64;",
                  "                    }",
                  "                    ",
                  "    };",
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var url=environment.url+\"/schedules/\"+environment.accesskey+\"/candidates/\"+environment.candidate_email_id;",
                  "var method=\"GET\";",
                  "var limit=\"5\";",
                  "var ir='{\"recommendation\":true}';",
                  "var params=ir;",
                  "var signature=Utils.generateSignature(method,url,params,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);",
                  "postman.setGlobalVariable(\"ir_options\",ir);",
                  "postman.setGlobalVariable(\"result_limit\",limit);"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/schedules/{{accesskey}}/candidates/{{candidate_email_id}}?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&ir={{ir_options}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "schedules",
                "{{accesskey}}",
                "candidates",
                "{{candidate_email_id}}"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "ir",
                  "value": "{{ir_options}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "4c74050f-4137-2a1c-3e4c-57fc30c99071",
          "name": "{{url}}/candidates/{{candidate_email_id}}?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&ir={{ir_options}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "c33c484d-7d8d-465f-b51b-0c91ce28ce6c",
                "type": "text/javascript",
                "exec": [
                  "Utils ={",
                  "    generateTimeStamp: function(){",
                  "                        console.log(new Date());",
                  "                        console.log((new Date()).getTime());",
                  "                        console.log((new Date()).getTime()/1000);",
                  "                        var ts = Math.round((new Date()).getTime() / 1000);",
                  "                        return ts;",
                  "                    },",
                  "                    ",
                  "    generateSignature: function(request_method,request_url,request_params,api_key,private_key,time_stamp){",
                  "                                var str;",
                  "                                if(request_params===null){",
                  "                                    str=request_method+request_url+\"\\n\"+api_key+\"\\n\"+time_stamp;",
                  "                                }",
                  "                                else{",
                  "                                    str=request_method+request_url+\"\\n\"+api_key+\"\\n\"+request_params+\"\\n\"+time_stamp;",
                  "                                }",
                  "                        ",
                  "                                var hash = CryptoJS.HmacSHA1(str, private_key);",
                  "                                console.log(hash);",
                  "                                var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);",
                  "                                console.log(hashInBase64);",
                  "                                    return hashInBase64;",
                  "                    }",
                  "                    ",
                  "    };",
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var url=environment.url+\"/candidates/\"+environment.candidate_email_id;",
                  "var method=\"GET\";",
                  "var ir='{\"recommendation\":true}';",
                  "var params=ir;",
                  "var signature=Utils.generateSignature(method,url,params,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);",
                  "postman.setGlobalVariable(\"ir_options\",ir);"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/candidates/{{candidate_email_id}}?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&ir={{ir_options}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "candidates",
                "{{candidate_email_id}}"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "ir",
                  "value": "{{ir_options}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "75f6f1b7-67ad-af93-dbef-5d37198fec54",
          "name": "http://api.mettl.com/v1/schedules/b0fd2b67/candidates?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&ir={{ir_options}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "bc5321f5-22a8-4a71-b92d-6be572c17241",
                "type": "text/javascript",
                "exec": [
                  "Utils ={",
                  "    generateTimeStamp: function(){",
                  "                        console.log(new Date());",
                  "                        console.log((new Date()).getTime());",
                  "                        console.log((new Date()).getTime()/1000);",
                  "                        var ts = Math.round((new Date()).getTime() / 1000);",
                  "                        return ts;",
                  "                    },",
                  "                    ",
                  "    generateSignature: function(request_method,request_url,request_params,api_key,private_key,time_stamp){",
                  "                                var str;",
                  "                                if(request_params===null){",
                  "                                    str=request_method+request_url+\"\\n\"+api_key+\"\\n\"+time_stamp;",
                  "                                }",
                  "                                else{",
                  "                                    str=request_method+request_url+\"\\n\"+api_key+\"\\n\"+request_params+\"\\n\"+time_stamp;",
                  "                                }",
                  "                        ",
                  "                                var hash = CryptoJS.HmacSHA1(str, private_key);",
                  "                                console.log(hash);",
                  "                                var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);",
                  "                                console.log(hashInBase64);",
                  "                                    return hashInBase64;",
                  "                    }",
                  "                    ",
                  "    };",
                  "var ts = Math.round((new Date()).getTime() / 1000);",
                  "var ak=\"42e36da8-a3a3-4de5-b215-c9a738ad8c0f\";",
                  "var pk=\"d2ad2bef-1500-4cb3-90e2-72784d1a5a41\";",
                  "var url=\"http://api.mettl.com/v1/schedules/b0fd2b67/candidates\";",
                  "var method=\"GET\";",
                  "var ir='{\"recommendation\":true}';",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+ir+\"\\n\"+ts;",
                  "var hash = CryptoJS.HmacSHA1(str, pk);",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);",
                  "postman.setGlobalVariable(\"timestamp\", ts);",
                  "postman.setGlobalVariable(\"apikey\", ak);",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);",
                  "postman.setGlobalVariable(\"ir_options\",ir);"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "http://api.mettl.com/v1/schedules/b0fd2b67/candidates?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&ir={{ir_options}}",
              "protocol": "http",
              "host": [
                "api",
                "mettl",
                "com"
              ],
              "path": [
                "v1",
                "schedules",
                "b0fd2b67",
                "candidates"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "ir",
                  "value": "{{ir_options}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "07989073-fbd0-e2d5-61a8-6bd8abd79cda",
      "name": "account",
      "description": "",
      "item": [
        {
          "_postman_id": "3ec23546-4c40-4a96-2993-597ca18e18f3",
          "name": "get account details with defautl crf",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "dd2093f3-e58e-4348-a9c7-78fc7da5d800",
                "type": "text/javascript",
                "exec": [
                  "Utils ={",
                  "    generateTimeStamp: function(){",
                  "                        console.log(new Date());",
                  "                        console.log((new Date()).getTime());",
                  "                        console.log((new Date()).getTime()/1000);",
                  "                        var ts = Math.round((new Date()).getTime() / 1000);",
                  "                        return ts;",
                  "                    },",
                  "                    ",
                  "    generateSignature: function(request_method,request_url,request_params,api_key,private_key,time_stamp){",
                  "                                var str;",
                  "                                var strBytes;",
                  "                                var pkBytes=Utils.stringToBytes(private_key);",
                  "                                if(request_params===null){",
                  "                                    str=request_method+request_url+\"\\n\"+api_key+\"\\n\"+time_stamp;",
                  "                                    strBytes=Utils.stringToBytes(str);",
                  "                                }",
                  "                                else{",
                  "                                    str=request_method+request_url+\"\\n\"+api_key+\"\\n\"+request_params+\"\\n\"+time_stamp;",
                  "                                    strBytes=Utils.stringToBytes(str);",
                  "                                }",
                  "                        ",
                  "                                var hash = CryptoJS.HmacSHA1(strBytes.toString(CryptoJS.enc.Utf8), pkBytes.toString(CryptoJS.enc.Utf8));",
                  "                                console.log(hash);",
                  "                                var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);",
                  "                                console.log(hashInBase64);",
                  "                                    return hashInBase64;",
                  "                    },",
                  "    stringToBytes:      function (str) {",
                  "                                var ch, st, re = [];",
                  "                                for (var i = 0; i < str.length; i++ ) {",
                  "\t                                ch = str.charCodeAt(i);  // get char ",
                  "\t                                st = [];                 // set up \"stack\"",
                  "\t                        do {",
                  "\t                            st.push( ch & 0xFF );  // push byte to stack",
                  "\t                            ch = ch >> 8;          // shift value down by 1 byte",
                  "\t                           }  ",
                  "\t                        while ( ch );",
                  "\t                            // add stack contents to result",
                  "\t                            // done because chars have \"wrong\" endianness",
                  "\t                            re = re.concat( st.reverse() );",
                  "                        }",
                  "                                // return an array of bytes",
                  "                        return re;",
                  "                    }    ",
                  "                    ",
                  "    };",
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var url=environment.url+\"/account\";",
                  "var method=\"GET\";",
                  "var params=null;",
                  "var signature=Utils.generateSignature(method,url,params,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "3940ba25-96c0-4ea0-8762-3cc238a95941",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests.verifyResponseOfGetAccountApiWithoutLanguageKey=jsonData.status===\"SUCCESS\";",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/account?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "account"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "f71eb692-d5e7-cf80-cbcc-12246aad23eb",
          "name": "http://api.mettl.info/v1/account?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&languageCode=english",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var lc=\"english\";",
                  "var url=environment.url+\"/account\";",
                  "var method=\"GET\";",
                  "var signature=Utils.generateSignature(method,url,lc,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifyResponseOfGetAccountApiWithLanguageKeyEnglish\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/account?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&languageCode=english",
              "host": [
                "{{url}}"
              ],
              "path": [
                "account"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "languageCode",
                  "value": "english",
                  "equals": true
                }
              ]
            }
          },
          "response": [
            {
              "id": "9d6f6867-5a99-41bb-93c6-f580504798a9",
              "name": "get account details with english crfs",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {},
                "url": {
                  "raw": "{{url}}/account?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&languageCode=english",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "account"
                  ],
                  "query": [
                    {
                      "key": "ak",
                      "value": "{{ak}}",
                      "equals": true
                    },
                    {
                      "key": "asgn",
                      "value": "{{signature}}",
                      "equals": true
                    },
                    {
                      "key": "ts",
                      "value": "{{$timestamp}}",
                      "equals": true
                    },
                    {
                      "key": "languageCode",
                      "value": "english",
                      "equals": true
                    }
                  ]
                }
              },
              "status": "200",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Length",
                  "value": "974",
                  "name": "Content-Length",
                  "description": "The length of the response body in octets (8-bit bytes)"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json;charset=UTF-8",
                  "name": "Content-Type",
                  "description": "The mime type of this content"
                },
                {
                  "key": "Date",
                  "value": "Wed, 04 Apr 2018 17:52:29 GMT",
                  "name": "Date",
                  "description": "The date and time that the message was sent"
                },
                {
                  "key": "Proxy-Connection",
                  "value": "Keep-alive",
                  "name": "Proxy-Connection",
                  "description": "Custom header"
                },
                {
                  "key": "Server",
                  "value": "Apache/2.4.7 (Ubuntu)",
                  "name": "Server",
                  "description": "A name for the server"
                },
                {
                  "key": "X-Application-Context",
                  "value": "mettl-api-gateway:aws:8000",
                  "name": "X-Application-Context",
                  "description": "Custom header"
                },
                {
                  "key": "X-Rate-Limit-Remaining",
                  "value": "3499",
                  "name": "X-Rate-Limit-Remaining",
                  "description": "Custom header"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"status\":\"SUCCESS\",\"accountInfo\":{\"email\":\"amit.singh1@mettl.com\",\"firstName\":\"Amit\",\"lastName\":null,\"accountType\":\"ENTERPRISE\",\"logoPath\":\"https://mettl.xyz/logo/11088.png\",\"whiteLabelInfo\":{\"headerBackgroundColor\":null,\"headerFontColor\":null,\"buttonColor\":null,\"buttonFontColor\":null,\"customTestUrl\":null,\"cssPath\":\"//static.mettl.xyz/clientTheme/null\",\"faviconPath\":\"//static.mettl.xyz/favicon/null\",\"backgroundImgPath\":\"//static.mettl.xyz/testBackground/null\",\"supportNumbers\":[\"+1 650-924-9221\",\"+91 82878 03040\"]},\"registrationFields\":[{\"name\":\"Email Address\",\"type\":\"TextBox\",\"required\":true,\"validate\":false},{\"name\":\"First Name\",\"type\":\"TextBox\",\"required\":true,\"validate\":false},{\"name\":\"date of birth\",\"type\":\"Calendar\",\"required\":true,\"validate\":false},{\"name\":\"gender\",\"type\":\"SelectBox\",\"required\":false,\"validate\":false,\"values\":[\"male\",\"female\"]},{\"name\":\"level of education\",\"type\":\"SelectBox\",\"required\":false,\"validate\":false,\"values\":[\"10th\",\"12th\"]}]}}"
            }
          ]
        },
        {
          "_postman_id": "466decfa-38ec-7449-8042-ae892db29b15",
          "name": "http://api.mettl.info/v1/account?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&languageCode=hindi",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "8e11af54-1360-463f-9c62-91ee08495857",
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var lc=\"hindi\";",
                  "var url=environment.url+\"/account\";",
                  "var method=\"GET\";",
                  "var signature=Utils.generateSignature(method,url,lc,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "55d915fb-8c75-4466-a673-cb6ed9a83ae5",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifyResponseOfGetAccountApiWithLanguageKeyHindi\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/account?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&languageCode=hindi",
              "host": [
                "{{url}}"
              ],
              "path": [
                "account"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "languageCode",
                  "value": "hindi",
                  "equals": true
                }
              ]
            }
          },
          "response": [
            {
              "id": "1778456d-1274-4d6a-a2b1-8b597cd2ed94",
              "name": "get account details with hindi crfs",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {},
                "url": {
                  "raw": "{{url}}/account?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&languageCode=hindi",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "account"
                  ],
                  "query": [
                    {
                      "key": "ak",
                      "value": "{{ak}}",
                      "equals": true
                    },
                    {
                      "key": "asgn",
                      "value": "{{signature}}",
                      "equals": true
                    },
                    {
                      "key": "ts",
                      "value": "{{$timestamp}}",
                      "equals": true
                    },
                    {
                      "key": "languageCode",
                      "value": "hindi",
                      "equals": true
                    }
                  ]
                }
              },
              "status": "200",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Length",
                  "value": "1125",
                  "name": "Content-Length",
                  "description": "The length of the response body in octets (8-bit bytes)"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json;charset=UTF-8",
                  "name": "Content-Type",
                  "description": "The mime type of this content"
                },
                {
                  "key": "Date",
                  "value": "Fri, 06 Apr 2018 07:31:04 GMT",
                  "name": "Date",
                  "description": "The date and time that the message was sent"
                },
                {
                  "key": "Proxy-Connection",
                  "value": "Keep-alive",
                  "name": "Proxy-Connection",
                  "description": "Custom header"
                },
                {
                  "key": "Server",
                  "value": "Apache/2.4.7 (Ubuntu)",
                  "name": "Server",
                  "description": "A name for the server"
                },
                {
                  "key": "X-Application-Context",
                  "value": "mettl-api-gateway:aws:8000",
                  "name": "X-Application-Context",
                  "description": "Custom header"
                },
                {
                  "key": "X-Rate-Limit-Remaining",
                  "value": "3499",
                  "name": "X-Rate-Limit-Remaining",
                  "description": "Custom header"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"status\":\"SUCCESS\",\"accountInfo\":{\"email\":\"amit.singh1@mettl.com\",\"firstName\":\"Amit\",\"lastName\":null,\"accountType\":\"ENTERPRISE\",\"logoPath\":\"https://mettl.xyz/logo/11088.png\",\"whiteLabelInfo\":{\"headerBackgroundColor\":null,\"headerFontColor\":null,\"buttonColor\":null,\"buttonFontColor\":null,\"customTestUrl\":null,\"cssPath\":\"//static.mettl.xyz/clientTheme/null\",\"faviconPath\":\"//static.mettl.xyz/favicon/null\",\"backgroundImgPath\":\"//static.mettl.xyz/testBackground/null\",\"supportNumbers\":[\"+1 650-924-9221\",\"+91 82878 03040\"]},\"registrationFields\":[{\"name\":\"\u0908\u092e\u0947\u0932 \u092a\u0924\u093e\",\"type\":\"TextBox\",\"required\":true,\"validate\":false},{\"name\":\"\u092a\u0939\u0932\u093e \u0928\u093e\u092e\",\"type\":\"TextBox\",\"required\":true,\"validate\":false},{\"name\":\"\u0909\u092a\u0928\u093e\u092e\",\"type\":\"TextBox\",\"required\":false,\"validate\":false},{\"name\":\"\u091c\u0928\u094d\u092e\u0924\u093f\u0925\u093f\",\"type\":\"Calendar\",\"required\":true,\"validate\":false},{\"name\":\"\u0938\u0902\u092a\u0930\u094d\u0915 \u0938\u0902\u0916\u094d\u092f\u093e\",\"type\":\"TextBox\",\"required\":false,\"validate\":false},{\"name\":\"\u0932\u093f\u0902\u0917\",\"type\":\"TextBox\",\"required\":false,\"validate\":false},{\"name\":\"\u0926\u0947\u0936\",\"type\":\"TextBox\",\"required\":false,\"validate\":false}]}}"
            }
          ]
        },
        {
          "_postman_id": "f7088dfe-79f0-34ce-22de-ee6a03f9faa4",
          "name": "http://api.mettl.info/v1/account?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&languageCode=arabic",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var lc=\"arabic\";",
                  "var url=environment.url+\"/account\";",
                  "var method=\"GET\";",
                  "var signature=Utils.generateSignature(method,url,lc,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifyResponseOfGetAccountApiWithLanguageKeyArabic\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/account?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&languageCode=arabic",
              "host": [
                "{{url}}"
              ],
              "path": [
                "account"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "languageCode",
                  "value": "arabic",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "e0877a03-5b2c-8eb7-bd1a-ce894e44bff1",
          "name": "http://api.mettl.info/v1/account?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&languageCode=spanish",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "91f2981e-e740-447c-9180-ab429333b6b3",
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var lc=\"spanish\";",
                  "var url=environment.url+\"/account\";",
                  "var method=\"GET\";",
                  "var signature=Utils.generateSignature(method,url,lc,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "5994b231-cf3d-4aaa-a8de-1b9c80a7962a",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifyResponseOfGetAccountApiWithLanguageKeySpanish\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/account?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&languageCode=spanish",
              "host": [
                "{{url}}"
              ],
              "path": [
                "account"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "languageCode",
                  "value": "spanish",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "73fb255b-6f8d-1ea3-e68b-2ce7be53ebeb",
          "name": "http://api.mettl.info/v1/account?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&languageCode=portuguese",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var lc=\"portuguese\";",
                  "var url=environment.url+\"/account\";",
                  "var method=\"GET\";",
                  "var signature=Utils.generateSignature(method,url,lc,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifyResponseOfGetAccountApiWithLanguageKeyPortuguese\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/account?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&languageCode=portuguese",
              "host": [
                "{{url}}"
              ],
              "path": [
                "account"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "languageCode",
                  "value": "portuguese",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "ed399e16-5ac6-fca7-88cf-1ac98397b058",
          "name": "http://api.mettl.info/v1/account?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&languageCode=german",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var lc=\"german\";",
                  "var url=environment.url+\"/account\";",
                  "var method=\"GET\";",
                  "var signature=Utils.generateSignature(method,url,lc,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifyResponseOfGetAccountApiWithLanguageKeyGerman\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/account?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&languageCode=german",
              "host": [
                "{{url}}"
              ],
              "path": [
                "account"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "languageCode",
                  "value": "german",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "04b3ac74-2a5f-5d7b-ec56-ad3fd4575ed3",
          "name": "http://api.mettl.info/v1/account?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&languageCode=random",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var lc=\"random\";",
                  "var url=environment.url+\"/account\";",
                  "var method=\"GET\";",
                  "var signature=Utils.generateSignature(method,url,lc,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifyResponseOfGetAccountApiWithLanguageKeyRandom\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/account?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&languageCode=random",
              "host": [
                "{{url}}"
              ],
              "path": [
                "account"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "languageCode",
                  "value": "random",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "0cf4f5b5-a6e0-34c9-226d-0d22466d6283",
      "name": "assessments",
      "description": "",
      "item": [
        {
          "_postman_id": "68748a7f-d711-97eb-be37-5f05380123bc",
          "name": "http://api.mettl.info/v1/assessments?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&limit=5",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var limit=\"5\";",
                  "var url=environment.url+\"/assessments\";",
                  "var method=\"GET\";",
                  "var signature=Utils.generateSignature(method,url,limit,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifySuccessOnRetrievingAssessmentsOfAnAccount\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&limit=5",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "limit",
                  "value": "5",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "dbf40313-bfc1-dee0-6217-2d0cf92cbf40",
          "name": "http://api.mettl.info/v1/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&limit=5",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var limit=\"5\";",
                  "var url=environment.url+\"/schedules\";",
                  "var method=\"GET\";",
                  "var signature=Utils.generateSignature(method,url,limit,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifySuccessOnRetrievingLimitedSchedulesOfAnAccount\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/schedules?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&limit=5",
              "host": [
                "{{url}}"
              ],
              "path": [
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "limit",
                  "value": "5",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "230dbae3-8419-3751-8d7d-7644ba0d30ca",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var url=environment.url+\"/assessments/\"+environment.assessmentid+\"/schedules\";",
                  "var method=\"GET\";",
                  "var params=null;",
                  "var signature=Utils.generateSignature(method,url,params,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifySuccessOnRetrievingSchedulesOfAnAssessment\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessmentid}}/schedules?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessmentid}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "9b5d6a05-957f-8b48-7f3b-6a861222c074",
          "name": "{{url}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var url=environment.url+\"/schedules\";",
                  "var method=\"GET\";",
                  "var params=null;",
                  "var signature=Utils.generateSignature(method,url,params,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifySuccessOnRetrievingSchedulesOfAnAccount\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/schedules?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "74983416-ef9b-e31f-5cb9-7c12705fc0ba",
          "name": "{{url}}/schedules/{{access-key}}?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var url=environment.url+\"/schedules/\"+environment.accesskey;",
                  "var method=\"GET\";",
                  "var params=null;",
                  "var signature=Utils.generateSignature(method,url,params,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifySuccessOnRetrievingDetailsOfASchedule\"]=jsonData.status===\"SUCCESS\"",
                  "tests[\"verifyScheduleKey\"]=jsonData.schedule.accessKey===environment.accesskey"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/schedules/{{accesskey}}?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "schedules",
                "{{accesskey}}"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "cb98304e-53cd-b5c6-a5a6-b23dc69b7eab",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;\r",
                  "var pk=environment.pk;\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\":\"hello\" ,\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "var url=environment.url+\"/assessments/\"+environment.assessmentid+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var signature=Utils.generateSignature(method,url,sc,ak,pk,Utils.generateTimeStamp());\r",
                  "postman.setGlobalVariable(\"signature\", signature);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  "//'+Math.random()+'\r",
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifySuccessOnCreatingScheduleWithoutBrowsingTolerance\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessmentid}}/schedules?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessmentid}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "0552b970-403e-e64b-ba4b-900470c82327",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;\r",
                  "var pk=environment.pk;\r",
                  "/*\r",
                  "var sc1 ='{\"assessmentId\": 111908,\"name\": \"Schedule10\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": true,\"isCandidateAuthProctored\" : true,\"visualProctoring\": {\"mode\": \"OFF\",\"options\": {\"candidateScreenCapture\": true,\"candidateAuthorization\": false}},\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "*/\r",
                  "var sc={};\r",
                  "var wp={};\r",
                  "var vp={};\r",
                  "var op={};\r",
                  "var ac={};\r",
                  "sc.assessmentId=111908;\r",
                  "sc.name=Math.random();\r",
                  "sc.scheduleType=\"AlwaysOn\";\r",
                  "sc.scheduleWindow=null;\r",
                  "wp.enabled=false;\r",
                  "sc.webProctoring=wp;\r",
                  "sc.imageProctoring=true;\r",
                  "sc.isCandidateAuthProctored=true;\r",
                  "op.candidateScreenCapture=true;\r",
                  "op.candidateAuthorization=false;\r",
                  "vp.mode=\"OFF\";\r",
                  "vp.options=op;\r",
                  "sc.visualProctoring=vp;\r",
                  "ac.type=\"OpenForAll\";\r",
                  "ac.candidates=null;\r",
                  "ac.sendEmail=false;\r",
                  "sc.access=ac;\r",
                  "sc.sourceApp=\"postmanclient\";\r",
                  "sc=JSON.stringify(sc);\r",
                  "var url=environment.url+\"/assessments/\"+environment.assessmentid+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var signature=Utils.generateSignature(method,url,sc,ak,pk,Utils.generateTimeStamp());\r",
                  "postman.setGlobalVariable(\"signature\", signature);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifySuccessOnCreatingScheduleWithImageProctoringAndProctorAuthorizationOn\"]=jsonData.status===\"SUCCESS\"",
                  "// var xhr=new XMLHttpRequest();",
                  "var apiEndPoint=environment.url+\"/schedules/\"+jsonData.createdSchedule.accessKey;",
                  "var method=\"GET\";",
                  "var params=null;",
                  "var signature=Utils.generateSignature(method,apiEndPoint,params,environment.ak,environment.pk,Utils.generateTimeStamp());",
                  "var queryString=\"?ak=\"+environment.ak+\"&asgn=\"+signature+\"&ts=\"+Utils.generateTimeStamp();",
                  "var url=apiEndPoint+queryString;",
                  "// console.log(apiEndPoint);",
                  "// console.log(url);",
                  "// xhr.onreadystatechange = function() {",
                  "//     if (this.readyState == 4 && this.status == 200) {",
                  "//         var jsonResponse = JSON.parse(this.responseText);",
                  "//         console.log(jsonResponse);",
                  "//     }",
                  "// };",
                  "// xhr.open(\"GET\",url,async=true);",
                  "// /*",
                  "// No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'null' is therefore not allowed access.",
                  "// */",
                  "// xhr.setRequestHeader( 'Origin', 'restapiclient');",
                  "// xhr.send();",
                  "// //console.log(xhr.schedule.imageProctoring);",
                  "// //console.log(xhr.schedule.isCandidateAuthProctored);",
                  "// //tests[\"verifySuccessOnCreatingScheduleWithImageProctoring\"]=xhr.status===\"Success\"",
                  "// //tests[\"verifyImageProctoringSwitch\"]=xhr.schedule.imageProctoring===true",
                  "// //tests[\"verifyProctorAuthorizationSwitch\"]=xhr.schedule.isCandidateAuthProctored===true",
                  "",
                  "",
                  "// function getAjax(url, success) {",
                  "//     var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');",
                  "//     xhr.open('GET', url,true);",
                  "//     xhr.onreadystatechange = function() {",
                  "//         if (xhr.readyState==4 && xhr.status==200) success(xhr.responseText);",
                  "//     };",
                  "//     xhr.setRequestHeader( 'Origin', 'restapiclient');",
                  "//     xhr.send();",
                  "//     return xhr;",
                  "// }",
                  "",
                  "// // example request",
                  "// getAjax(url, function(data){ ",
                  "//     var json = JSON.parse(data);",
                  "//     console.log(json); ",
                  "    ",
                  "// });",
                  "",
                  "$.ajax({",
                  "    type: \"GET\",",
                  "    url:   url,",
                  "    headers: {",
                  "            'Origin':'restapiclient'",
                  "           },",
                  "    success:function(response){",
                  "                console.log(response.data);",
                  "            },",
                  "    error: function(XMLHttpRequest, textStatus, errorThrown) { ",
                  "                console.log(\"Status: \" + textStatus); ",
                  "            }        ",
                  "});",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessmentid}}/schedules?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessmentid}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "888f63ed-032d-ae28-6685-5a3c8a2a5cac",
          "name": "{{url}}/assessments/{{assessmentid}}/schedules?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;\r",
                  "var pk=environment.pk;\r",
                  "/*\r",
                  "var sc1 ='{\"assessmentId\": 111908,\"name\": \"Schedule10\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": true,\"isCandidateAuthProctored\" : true,\"visualProctoring\": {\"mode\": \"OFF\",\"options\": {\"candidateScreenCapture\": true,\"candidateAuthorization\": false}},\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "*/\r",
                  "var sc={};\r",
                  "var wp={};\r",
                  "var vp={};\r",
                  "var op={};\r",
                  "var ac={};\r",
                  "sc.assessmentId=environment.assessmentid;\r",
                  "sc.name=Math.random();\r",
                  "sc.scheduleType=\"AlwaysOn\";\r",
                  "sc.scheduleWindow=null;\r",
                  "wp.enabled=false;\r",
                  "sc.webProctoring=wp;\r",
                  "sc.imageProctoring=false;\r",
                  "sc.isCandidateAuthProctored=false;\r",
                  "op.candidateScreenCapture=true;\r",
                  "op.candidateAuthorization=false;\r",
                  "vp.mode=\"VIDEO\";\r",
                  "vp.options=op;\r",
                  "sc.visualProctoring=vp;\r",
                  "ac.type=\"OpenForAll\";\r",
                  "ac.candidates=null;\r",
                  "ac.sendEmail=false;\r",
                  "sc.access=ac;\r",
                  "sc.sourceApp=\"postmanclient\";\r",
                  "sc=JSON.stringify(sc);\r",
                  "var url=environment.url+\"/assessments/\"+environment.assessmentid+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var signature=Utils.generateSignature(method,url,sc,ak,pk,Utils.generateTimeStamp());\r",
                  "postman.setGlobalVariable(\"signature\", signature);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifySuccessOnCreatingScheduleWithImageProctoringAndProctorAuthorizationOn\"]=jsonData.status===\"SUCCESS\"",
                  "// var xhr=new XMLHttpRequest();",
                  "var apiEndPoint=environment.url+\"/schedules/\"+jsonData.createdSchedule.accessKey;",
                  "var method=\"GET\";",
                  "var params=null;",
                  "var signature=Utils.generateSignature(method,apiEndPoint,params,environment.ak,environment.pk,Utils.generateTimeStamp());",
                  "var queryString=\"?ak=\"+environment.ak+\"&asgn=\"+signature+\"&ts=\"+Utils.generateTimeStamp();",
                  "var url=apiEndPoint+queryString;",
                  "// console.log(apiEndPoint);",
                  "// console.log(url);",
                  "// xhr.onreadystatechange = function() {",
                  "//     if (this.readyState == 4 && this.status == 200) {",
                  "//         var jsonResponse = JSON.parse(this.responseText);",
                  "//         console.log(jsonResponse);",
                  "//     }",
                  "// };",
                  "// xhr.open(\"GET\",url,async=true);",
                  "// /*",
                  "// No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'null' is therefore not allowed access.",
                  "// */",
                  "// xhr.setRequestHeader( 'Origin', 'restapiclient');",
                  "// xhr.send();",
                  "// //console.log(xhr.schedule.imageProctoring);",
                  "// //console.log(xhr.schedule.isCandidateAuthProctored);",
                  "// //tests[\"verifySuccessOnCreatingScheduleWithImageProctoring\"]=xhr.status===\"Success\"",
                  "// //tests[\"verifyImageProctoringSwitch\"]=xhr.schedule.imageProctoring===true",
                  "// //tests[\"verifyProctorAuthorizationSwitch\"]=xhr.schedule.isCandidateAuthProctored===true",
                  "",
                  "",
                  "// function getAjax(url, success) {",
                  "//     var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');",
                  "//     xhr.open('GET', url,true);",
                  "//     xhr.onreadystatechange = function() {",
                  "//         if (xhr.readyState==4 && xhr.status==200) success(xhr.responseText);",
                  "//     };",
                  "//     xhr.setRequestHeader( 'Origin', 'restapiclient');",
                  "//     xhr.send();",
                  "//     return xhr;",
                  "// }",
                  "",
                  "// // example request",
                  "// getAjax(url, function(data){ ",
                  "//     var json = JSON.parse(data);",
                  "//     console.log(json); ",
                  "    ",
                  "// });",
                  "",
                  "$.ajax({",
                  "    type: 'GET',",
                  "    url:   url,",
                  "    headers: {",
                  "            'Origin':'mettl.info'",
                  "          },",
                  "    success:function(response){",
                  "                var data=JSON.stringify(response);",
                  "\t\t\t        console.log( data ); // server response",
                  "            },",
                  "    error: function(XMLHttpRequest, textStatus, errorThrown) { ",
                  "                console.log(\"Status: \" + textStatus); ",
                  "            }        ",
                  "});",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessmentid}}/schedules?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessmentid}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "2a54c809-027b-7995-fd40-013a57a59844",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "//var url=\"http://api.mettl.info/v1/account\";\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\": \"Schedule101\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": true,\"isCandidateAuthProctored\" : false,\"visualProctoring\": {\"mode\": \"VIDEO\",\"options\": {\"candidateScreenCapture\": false,\"candidateAuthorization\": false}},\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "0e3a31f7-8de9-7220-e67a-d6bdd4325611",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "//var url=\"http://api.mettl.info/v1/account\";\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\": \"Schedule10\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": true,\"isCandidateAuthProctored\" : false,\"visualProctoring\": {\"mode\": \"PHOTO\",\"options\": {\"candidateScreenCapture\": false,\"candidateAuthorization\": false}},\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "6e5ee3c6-e38c-bf75-b0fb-45e860eea098",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "//var url=\"http://api.mettl.info/v1/account\";\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\": \"Schedule10\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": true,\"isCandidateAuthProctored\" : false,\"visualProctoring\": {\"mode\": \"PHOTO\",\"options\": {\"candidateScreenCapture\": false,\"candidateAuthorization\": false}},\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "d48f0fd1-aba3-97ae-4f0a-938545a0e1c0",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "//var url=\"http://api.mettl.info/v1/account\";\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\": \"Schedule10\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": true,\"isCandidateAuthProctored\" : false,\"visualProctoring\": {\"mode\": \"PHOTO\",\"options\": {\"candidateScreenCapture\": false,\"candidateAuthorization\": false}},\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "d0d34b0a-3a5a-5838-583c-360d2361ff94",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "//var url=\"http://api.mettl.info/v1/account\";\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\": \"Schedule9\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": true,\"isCandidateAuthProctored\" : true,\"visualProctoring\": {\"mode\": \"OFF\",\"options\": {\"candidateScreenCapture\": false,\"candidateAuthorization\": false}},\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "9dce7284-7e4b-8edd-c08b-aec71a03e9c6",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "//var url=\"http://api.mettl.info/v1/account\";\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\": \"Schedule8\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": false,\"isCandidateAuthProctored\" : false,\"visualProctoring\": {\"mode\": \"OFF\",\"options\": {\"candidateScreenCapture\": false,\"candidateAuthorization\": true}},\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "8bc9f259-0b4c-68a9-c773-1f7176b3de85",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "//var url=\"http://api.mettl.info/v1/account\";\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\": \"Schedule7\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": false,\"isCandidateAuthProctored\" : false,\"visualProctoring\": {\"mode\": \"OFF\",\"options\": {\"candidateScreenCapture\": true,\"candidateAuthorization\": false}},\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "de547ef2-f5e1-864f-1d8b-a8e14faad943",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "//var url=\"http://api.mettl.info/v1/account\";\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\": \"Schedule6\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": false,\"isCandidateAuthProctored\" : false,\"visualProctoring\": {\"mode\": \"VIDEO\",\"options\": {\"candidateScreenCapture\": false,\"candidateAuthorization\": false}},\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "b7578df3-e67d-2bf5-72f1-5ef5dd8ba497",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "//var url=\"http://api.mettl.info/v1/account\";\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\": \"Schedule5\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": false,\"isCandidateAuthProctored\" : false,\"visualProctoring\": {\"mode\": \"PHOTO\",\"options\": {\"candidateScreenCapture\": false,\"candidateAuthorization\": false}},\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "92e4aa39-ab3c-58aa-9732-72cad8fa08f1",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "//var url=\"http://api.mettl.info/v1/account\";\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\": \"Schedule4\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": false,\"isCandidateAuthProctored\" : true,\"visualProctoring\": {\"mode\": \"OFF\",\"options\": {\"candidateScreenCapture\": false,\"candidateAuthorization\": false}},\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "a8d811d2-15c4-08ef-e230-b4904f8ddc21",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "//var url=\"http://api.mettl.info/v1/account\";\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\": \"Schedule4\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": true,\"isCandidateAuthProctored\" : false,\"visualProctoring\": {\"mode\": \"OFF\",\"options\": {\"candidateScreenCapture\": false,\"candidateAuthorization\": false}},\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "6d790970-4603-7936-be54-1ab07fe9d6c8",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "//var url=\"http://api.mettl.info/v1/account\";\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\": \"Schedule3\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": true,\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "def23e0f-dfdd-d4e6-c259-bf4816920bbf",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "//var url=\"http://api.mettl.info/v1/account\";\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\": \"Schedule2\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": true,\"access\": { \"type\": \"OpenForAll\",\"candidates\": null, \"sendEmail\": false},\"sourceApp\": \"postmanclient\"}';\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "12ba1cf4-a3d2-2583-a55c-4d6ea3a4293e",
          "name": "{{url}}/assessments/{{assessment-id}}/settings/edit?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&as={{assessment_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "//var url=\"http://api.mettl.info/v1/account\";\r",
                  "var as ='{\"assessmentId\" : 111908, \"allowCopyPaste\" : false , \"exitRedirectionURL\" : null ,\"instructions\" : \"hello\" , \"onScreenCalculator\": true , \"showReportToCandidate\" : true}';\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/settings/edit\";\r",
                  "//var url=\"http://api.mettl.info/v1/assessments/111908/settings/edit\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+as+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"assessment_prop\",as);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/settings/edit?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&as={{assessment_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "settings",
                "edit"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "as",
                  "value": "{{assessment_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "9ad63aad-38c1-00d6-abeb-5658d28fb5fc",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "var sc={};\r",
                  "var wp={};\r",
                  "var ac={};\r",
                  "sc.assessmentId=111908;\r",
                  "sc.name=\"Latest Schedule\";\r",
                  "sc.scheduleType=\"AlwaysOn\";\r",
                  "sc.scheduleWindow=null;\r",
                  "wp.enabled=false;\r",
                  "sc.webProctoring=wp;\r",
                  "ac.type=\"OpenForAll\";\r",
                  "ac.candidates=null;\r",
                  "ac.sendEmail=false;\r",
                  "sc.access=ac;\r",
                  "sc.sourceApp=\"postmanclient\";\r",
                  "sc=JSON.stringify(sc);\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "595225cb-0b9b-c058-7646-5c47fdf2fb04",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\": \"Schedule10111\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": true,\"isCandidateAuthProctored\" : true,\"visualProctoring\": {\"mode\": \"OFF\",\"options\": {\"candidateScreenCapture\": true,\"candidateAuthorization\": false}},\"access\": { \"type\": \"ByInvitation\",\"candidates\": [{\"name\":\"saarthi\",\"email\":\"saarthi@yopmail.com\"}], \"sendEmail\": true},\"sourceApp\": \"postmanclient\"}';\r",
                  "\r",
                  "// var sc={};\r",
                  "// var wp={};\r",
                  "// var vp={};\r",
                  "// var op={};\r",
                  "// var ac={};\r",
                  "// sc.assessmentId=111908;\r",
                  "// //sc.name='';\r",
                  "// sc.scheduleType=\"AlwaysOn\";\r",
                  "// sc.scheduleWindow=null;\r",
                  "// wp.enabled=false;\r",
                  "// sc.webProctoring=wp;\r",
                  "// sc.imageProctoring=true;\r",
                  "// sc.isCandidateAuthProctored=true;\r",
                  "// op.candidateScreenCapture=true;\r",
                  "// op.candidateAuthorization=false;\r",
                  "// vp.mode=\"OFF\";\r",
                  "// vp.options=op;\r",
                  "// sc.visualProctoring=vp;\r",
                  "// ac.type=\"OpenForAll\";\r",
                  "// ac.candidates=null;\r",
                  "// ac.sendEmail=false;\r",
                  "// sc.access=ac;\r",
                  "// sc.sourceApp=\"postmanclient\";\r",
                  "// sc=JSON.stringify(sc);\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "2b04a1bb-b138-eac9-072b-29189857ed32",
          "name": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "var ak=\"a139349a-893f-4974-92c2-ec278854610f\";\r",
                  "var pk=\"ff0dd9d8-21ec-4de3-892d-6be646b41464\";\r",
                  "\r",
                  "var sc ='{\"assessmentId\": 111908,\"name\": \"Schedule10111\",\"scheduleType\": \"AlwaysOn\",\"scheduleWindow\": null,\"webProctoring\": { \"enabled\": false},\"imageProctoring\": true,\"isCandidateAuthProctored\" : true,\"visualProctoring\": {\"mode\": \"OFF\",\"options\": {\"candidateScreenCapture\": true,\"candidateAuthorization\": false}},\"access\": { \"type\": \"ByInvitation\",\"candidates\": [{\"name\":\"saarthi\",\"email\":\"saarthi@yopmail.com\"}], \"sendEmail\": true},\"sourceApp\": \"postmanclient\"}';\r",
                  "\r",
                  "// var sc={};\r",
                  "// var wp={};\r",
                  "// var vp={};\r",
                  "// var op={};\r",
                  "// var ac={};\r",
                  "// sc.assessmentId=111908;\r",
                  "// //sc.name='';\r",
                  "// sc.scheduleType=\"AlwaysOn\";\r",
                  "// sc.scheduleWindow=null;\r",
                  "// wp.enabled=false;\r",
                  "// sc.webProctoring=wp;\r",
                  "// sc.imageProctoring=true;\r",
                  "// sc.isCandidateAuthProctored=true;\r",
                  "// op.candidateScreenCapture=true;\r",
                  "// op.candidateAuthorization=false;\r",
                  "// vp.mode=\"OFF\";\r",
                  "// vp.options=op;\r",
                  "// sc.visualProctoring=vp;\r",
                  "// ac.type=\"OpenForAll\";\r",
                  "// ac.candidates=null;\r",
                  "// ac.sendEmail=false;\r",
                  "// sc.access=ac;\r",
                  "// sc.sourceApp=\"postmanclient\";\r",
                  "// sc=JSON.stringify(sc);\r",
                  "var url=postman.getEnvironmentVariable(\"url\")+\"/assessments/\"+postman.getEnvironmentVariable(\"assessment-id\")+\"/schedules\";\r",
                  "var method=\"POST\";\r",
                  "var str=method+url+\"\\n\"+ak+\"\\n\"+sc+\"\\n\"+ts;\r",
                  "var hash = CryptoJS.HmacSHA1(str, pk);\r",
                  "var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "postman.setGlobalVariable(\"timestamp\", ts);\r",
                  "postman.setGlobalVariable(\"apikey\", ak);\r",
                  "postman.setGlobalVariable(\"signature\", hashInBase64);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{assessment-id}}/schedules?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{assessment-id}}",
                "schedules"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{apikey}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "a2893a2b-7678-1b1b-a315-543e64bb3781",
          "name": "CREATE ASSESSMENT-----{{url}}/assessments?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&assessments={{assessments_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var assessments ='{\"name\":\"as6\",\"duration\":0,\"instructions\":\"string\",\"allowCopyPaste\":true,\"exitRedirectionURL\":\"mettl.com\",\"sections\":[{\"name\":\"section 1\",\"duration\":\"30\",\"instructions\":\"string\",\"allQuestionsMandatory\":true,\"randomizeQuestions\":true,\"skills\":[{\"name\":\"check\",\"level\":\"easy\",\"questionCount\":1,\"questionType\":\"MCQ\",\"correctGrade\":1,\"incorrectGrade\":0}]}]}';\r",
                  "var ak=environment.ak;\r",
                  "var pk=environment.pk;\r",
                  "var url=environment.url+\"/assessments\";\r",
                  "var method=\"POST\";\r",
                  "var signature=Utils.generateSignature(method,url,assessments,ak,pk,Utils.generateTimeStamp());\r",
                  "postman.setGlobalVariable(\"signature\", signature);\r",
                  "postman.setGlobalVariable(\"assessments_prop\",assessments);\r",
                  "\r",
                  "//Error :Invalid custom redirect URL format provided - http://null/#!/closeTest"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&assessments={{assessments_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "assessments",
                  "value": "{{assessments_prop}}",
                  "equals": true
                }
              ]
            },
            "description": "CREATE ASSESSMENT"
          },
          "response": []
        },
        {
          "_postman_id": "5907c7dc-0978-7ba8-d0a0-05eee6496c69",
          "name": "EDIT ASSESSMENT SETTINGS------{{url}}/assessments/{{edit_assessment_id}}/settings/edit?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&as={{edit_settings}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var as='{\"instructions\":\"HTML tags allowed\",\"onScreenCalculator\":true,\"exitRedirectionURL\":true,\"showReportToCandidate\":true,\"allowCopyPaste\":false}'",
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var url=environment.url+\"/assessments/\"+environment.edit_assessment_id+\"/settings/edit\";",
                  "var method=\"POST\";",
                  "var signature=Utils.generateSignature(method,url,as,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);",
                  "postman.setGlobalVariable(\"edit_settings\",as);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/assessments/{{edit_assessment_id}}/settings/edit?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&as={{edit_settings}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assessments",
                "{{edit_assessment_id}}",
                "settings",
                "edit"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "as",
                  "value": "{{edit_settings}}",
                  "equals": true
                }
              ]
            },
            "description": "EDIT ASSESSMENT SETTINGS"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "6f4d4639-bccd-7b63-65a1-e6a345e43b39",
      "name": "pbt",
      "description": "",
      "item": [
        {
          "_postman_id": "da5ad1cc-d4ca-3a41-fbd7-8a4f61f42d7f",
          "name": "http://api.mettl.info/v1/pbts?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var url=environment.url+\"/pbts\";",
                  "var method=\"GET\";",
                  "var params=null;",
                  "var signature=Utils.generateSignature(method,url,params,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifySuccessOnRetrievingAllPbtsOfAnAccount\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/pbts?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "pbts"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "c4d29bb6-6acf-c2a6-3409-986d8b293bc3",
          "name": "http://api.mettl.info/v1/pbts/add?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&pbts=[1]",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "282fb1a7-7f3a-42fa-9cc4-37ceb3929d0c",
                "type": "text/javascript",
                "exec": [
                  "Utils ={",
                  "    generateTimeStamp: function(){",
                  "                        console.log(new Date());",
                  "                        console.log((new Date()).getTime());",
                  "                        console.log((new Date()).getTime()/1000);",
                  "                        var ts = Math.round((new Date()).getTime() / 1000);",
                  "                        return ts;",
                  "                    },",
                  "                    ",
                  "    generateSignature: function(request_method,request_url,request_params,api_key,private_key,time_stamp){",
                  "                                var str;",
                  "                                if(request_params===null){",
                  "                                    str=request_method+request_url+\"\\n\"+api_key+\"\\n\"+time_stamp;",
                  "                                }",
                  "                                else{",
                  "                                    str=request_method+request_url+\"\\n\"+api_key+\"\\n\"+request_params+\"\\n\"+time_stamp;",
                  "                                }",
                  "                        ",
                  "                                var hash = CryptoJS.HmacSHA1(str, private_key);",
                  "                                console.log(hash);",
                  "                                var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);",
                  "                                console.log(hashInBase64);",
                  "                                    return hashInBase64;",
                  "                    }",
                  "                    ",
                  "    };",
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var pbts=\"[676]\";",
                  "var url=environment.url+\"/pbts/add\";",
                  "var method=\"POST\";",
                  "var signature=Utils.generateSignature(method,url,pbts,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1175ed60-c543-4928-95d0-d70704de760f",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifyErrorIfPbtIsAlreadyAdded\"]=jsonData.status===\"ERROR\"",
                  "tests[\"verifyBooleanValueIfPbtIsAlreadyAdded\"]=jsonData.pbts[0].added===false",
                  "tests[\"verifyErrorMessageIfPbtIsAlreadyAdded\"]=jsonData.pbts[0].message===\"SQLException: pbt assessment already added\""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/pbts/add?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&pbts=[676]",
              "host": [
                "{{url}}"
              ],
              "path": [
                "pbts",
                "add"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "pbts",
                  "value": "[676]",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "56f7b980-8152-daab-1f9b-50cb35c1a3eb",
      "name": "schedule",
      "description": "",
      "item": [
        {
          "_postman_id": "5be60bc7-0414-8aab-c358-325d3e59c323",
          "name": "{{url}}/schedules/{{access-key}}/edit?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}} copy",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "Utils ={\r",
                  "    generateTimeStamp: function(){\r",
                  "                        console.log(new Date());\r",
                  "                        console.log((new Date()).getTime());\r",
                  "                        console.log((new Date()).getTime()/1000);\r",
                  "                        var ts = Math.round((new Date()).getTime() / 1000);\r",
                  "                        return ts;\r",
                  "                    },\r",
                  "                    \r",
                  "    generateSignature: function(request_method,request_url,request_params,api_key,private_key,time_stamp){\r",
                  "                                var str;\r",
                  "                                if(request_params===null){\r",
                  "                                    str=request_method+request_url+\"\\n\"+api_key+\"\\n\"+time_stamp;\r",
                  "                                }\r",
                  "                                else{\r",
                  "                                    str=request_method+request_url+\"\\n\"+api_key+\"\\n\"+request_params+\"\\n\"+time_stamp;\r",
                  "                                }\r",
                  "                        \r",
                  "                                var hash = CryptoJS.HmacSHA1(str, private_key);\r",
                  "                                console.log(hash);\r",
                  "                                var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\r",
                  "                                console.log(hashInBase64);\r",
                  "                                    return hashInBase64;\r",
                  "                    }\r",
                  "                    \r",
                  "    };\r",
                  "\r",
                  "var ak=environment.ak;\r",
                  "var pk=environment.pk;\r",
                  "//var sc ='{\"access\": { \"type\": \"ByInvitation\",\"candidates\":{\"add\": [{\"name\":\"\",\"email\":\"\"}]}, \"sendEmail\": true},\"sourceApp\": \"postmanclient\"}';\r",
                  "var sc ='{\"access\": { \"type\": \"ByInvitation\",\"candidates\":{\"remove\": [\"\"]}, \"sendEmail\": true},\"sourceApp\": \"postmanclient\"}';\r",
                  "var url=environment.url+\"/schedules/\"+environment.accesskey+\"/edit\";\r",
                  "var method=\"POST\";\r",
                  "var signature=Utils.generateSignature(method,url,sc,ak,pk,Utils.generateTimeStamp());\r",
                  "postman.setGlobalVariable(\"signature\", signature);\r",
                  "postman.setGlobalVariable(\"schedule_prop\", sc);\r",
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifySuccessOnEditSchedule\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/schedules/{{accesskey}}/edit?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "schedules",
                "{{accesskey}}",
                "edit"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "d0951e08-db6b-7dd4-518c-885c6c0fbeee",
          "name": "{{url}}/schedules/{{access-key}}/edit?ak={{apikey}}&asgn={{signature}}&ts={{timestamp}}&sc={{schedule_prop}}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var sc ='{\"access\": { \"type\": \"ByInvitation\",\"candidates\":{\"add\": [{\"name\":\"amit\",\"email\":\"amit@yopmail.com\"}]}, \"sendEmail\": true},\"sourceApp\": \"postmanclient\"}';\r",
                  "var ak=environment.ak;\r",
                  "var pk=environment.pk;\r",
                  "var url=environment.url+\"/schedules/\"+environment.accesskey+\"/edit\";\r",
                  "var method=\"POST\";\r",
                  "var signature=Utils.generateSignature(method,url,sc,ak,pk,Utils.generateTimeStamp());\r",
                  "postman.setGlobalVariable(\"signature\", signature);\r",
                  "postman.setGlobalVariable(\"schedule_prop\",sc);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifySuccessOnEditSchedule\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{url}}/schedules/{{accesskey}}/edit?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&sc={{schedule_prop}}",
              "host": [
                "{{url}}"
              ],
              "path": [
                "schedules",
                "{{accesskey}}",
                "edit"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "sc",
                  "value": "{{schedule_prop}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "047ceb9c-f56a-4b90-a202-4dc7f07a6b38",
      "name": "account_mock",
      "description": "",
      "item": [
        {
          "_postman_id": "5a2e9be2-bad5-45d8-8850-e1a1af3ab8c2",
          "name": "https://490809e5-d8fb-46ef-b68b-b65bc2802f34.mock.pstmn.io/account?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&languageCode=english",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "47834a61-bea3-4757-b433-8a00ca43da96",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests.verifyResponseOfGetAccountApiWithLanguageKeyEnglish=jsonData.status===\"SUCCESS\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "0597d1b1-7f66-40c9-9eac-1a852ea98b04",
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var lc=\"english\";",
                  "var url=environment.url+\"/account\";",
                  "var method=\"GET\";",
                  "var signature=Utils.generateSignature(method,url,lc,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "https://490809e5-d8fb-46ef-b68b-b65bc2802f34.mock.pstmn.io/account?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&languageCode=english",
              "protocol": "https",
              "host": [
                "490809e5-d8fb-46ef-b68b-b65bc2802f34",
                "mock",
                "pstmn",
                "io"
              ],
              "path": [
                "account"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "languageCode",
                  "value": "english",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "818b4dc9-e017-4618-a703-ed66b79a0877",
          "name": "https://490809e5-d8fb-46ef-b68b-b65bc2802f34.mock.pstmn.io/account?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&languageCode=hindi",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "db3308ae-559e-4553-a92a-496907ee27b2",
                "type": "text/javascript",
                "exec": [
                  "var ak=environment.ak;",
                  "var pk=environment.pk;",
                  "var lc=\"hindi\";",
                  "var url=environment.url+\"/account\";",
                  "var method=\"GET\";",
                  "var signature=Utils.generateSignature(method,url,lc,ak,pk,Utils.generateTimeStamp());",
                  "postman.setGlobalVariable(\"signature\", signature);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "95fd1744-1105-4adb-be7a-e27c4c2e6371",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"verifyResponseOfGetAccountApiWithLanguageKeyHindi\"]=jsonData.status===\"SUCCESS\""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "https://490809e5-d8fb-46ef-b68b-b65bc2802f34.mock.pstmn.io/account?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&languageCode=hindi",
              "protocol": "https",
              "host": [
                "490809e5-d8fb-46ef-b68b-b65bc2802f34",
                "mock",
                "pstmn",
                "io"
              ],
              "path": [
                "account"
              ],
              "query": [
                {
                  "key": "ak",
                  "value": "{{ak}}",
                  "equals": true
                },
                {
                  "key": "asgn",
                  "value": "{{signature}}",
                  "equals": true
                },
                {
                  "key": "ts",
                  "value": "{{$timestamp}}",
                  "equals": true
                },
                {
                  "key": "languageCode",
                  "value": "hindi",
                  "equals": true
                }
              ]
            }
          },
          "response": [
            {
              "id": "8525af11-4af6-4dff-9b38-9856975323d6",
              "name": "get account details with hindi crfs",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {},
                "url": {
                  "raw": "https://490809e5-d8fb-46ef-b68b-b65bc2802f34.mock.pstmn.io/account?ak={{ak}}&asgn={{signature}}&ts={{$timestamp}}&languageCode=hindi",
                  "protocol": "https",
                  "host": [
                    "490809e5-d8fb-46ef-b68b-b65bc2802f34",
                    "mock",
                    "pstmn",
                    "io"
                  ],
                  "path": [
                    "account"
                  ],
                  "query": [
                    {
                      "key": "ak",
                      "value": "{{ak}}",
                      "equals": true
                    },
                    {
                      "key": "asgn",
                      "value": "{{signature}}",
                      "equals": true
                    },
                    {
                      "key": "ts",
                      "value": "{{$timestamp}}",
                      "equals": true
                    },
                    {
                      "key": "languageCode",
                      "value": "hindi",
                      "equals": true
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "",
                  "name": "Access-Control-Allow-Credentials",
                  "description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "",
                  "name": "Access-Control-Allow-Headers",
                  "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "",
                  "name": "Access-Control-Allow-Methods",
                  "description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*",
                  "name": "Access-Control-Allow-Origin",
                  "description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "",
                  "name": "Access-Control-Expose-Headers",
                  "description": "Lets a server whitelist headers that browsers are allowed to access."
                },
                {
                  "key": "Connection",
                  "value": "Close",
                  "name": "Connection",
                  "description": "Options that are desired for the connection"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip",
                  "name": "Content-Encoding",
                  "description": "The type of encoding used on the data."
                },
                {
                  "key": "Content-Length",
                  "value": "454",
                  "name": "Content-Length",
                  "description": "The length of the response body in octets (8-bit bytes)"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8",
                  "name": "Content-Type",
                  "description": "The mime type of this content"
                },
                {
                  "key": "Date",
                  "value": "Fri, 06 Apr 2018 07:50:15 GMT",
                  "name": "Date",
                  "description": "The date and time that the message was sent"
                },
                {
                  "key": "ETag",
                  "value": "W/\"3ce-fAGYXtQLGfzCh3RYtmJJ6g\"",
                  "name": "ETag",
                  "description": "An identifier for a specific version of a resource, often a message digest"
                },
                {
                  "key": "Proxy-Connection",
                  "value": "Keep-alive",
                  "name": "Proxy-Connection",
                  "description": "Custom header"
                },
                {
                  "key": "Server",
                  "value": "nginx",
                  "name": "Server",
                  "description": "A name for the server"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding",
                  "name": "Vary",
                  "description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
                },
                {
                  "key": "X-Application-Context",
                  "value": "mettl-api-gateway:aws:8000",
                  "name": "X-Application-Context",
                  "description": "Custom header"
                },
                {
                  "key": "X-Rate-Limit-Remaining",
                  "value": "3499",
                  "name": "X-Rate-Limit-Remaining",
                  "description": "Custom header"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"status\": \"SUCCESS\",\n    \"accountInfo\": {\n        \"email\": \"amit.singh1@mettl.com\",\n        \"firstName\": \"Amit\",\n        \"lastName\": null,\n        \"accountType\": \"ENTERPRISE\",\n        \"logoPath\": \"https://mettl.xyz/logo/11088.png\",\n        \"whiteLabelInfo\": {\n            \"headerBackgroundColor\": null,\n            \"headerFontColor\": null,\n            \"buttonColor\": null,\n            \"buttonFontColor\": null,\n            \"customTestUrl\": null,\n            \"cssPath\": \"//static.mettl.xyz/clientTheme/null\",\n            \"faviconPath\": \"//static.mettl.xyz/favicon/null\",\n            \"backgroundImgPath\": \"//static.mettl.xyz/testBackground/null\",\n            \"supportNumbers\": [\n                \"+1 650-924-9221\",\n                \"+91 82878 03040\"\n            ]\n        },\n        \"registrationFields\": [\n            {\n                \"name\": \"\u0908\u092e\u0947\u0932 \u092a\u0924\u093e\",\n                \"type\": \"TextBox\",\n                \"required\": true,\n                \"validate\": false\n            },\n            {\n                \"name\": \"\u092a\u0939\u0932\u093e \u0928\u093e\u092e\",\n                \"type\": \"TextBox\",\n                \"required\": true,\n                \"validate\": false\n            },\n            {\n                \"name\": \"\u0909\u092a\u0928\u093e\u092e\",\n                \"type\": \"TextBox\",\n                \"required\": false,\n                \"validate\": false\n            },\n            {\n                \"name\": \"\u091c\u0928\u094d\u092e\u0924\u093f\u0925\u093f\",\n                \"type\": \"Calendar\",\n                \"required\": true,\n                \"validate\": false\n            },\n            {\n                \"name\": \"\u0938\u0902\u092a\u0930\u094d\u0915 \u0938\u0902\u0916\u094d\u092f\u093e\",\n                \"type\": \"TextBox\",\n                \"required\": false,\n                \"validate\": false\n            },\n            {\n                \"name\": \"\u0932\u093f\u0902\u0917\",\n                \"type\": \"TextBox\",\n                \"required\": false,\n                \"validate\": false\n            },\n            {\n                \"name\": \"\u0926\u0947\u0936\",\n                \"type\": \"TextBox\",\n                \"required\": false,\n                \"validate\": false\n            }\n        ]\n    }\n}"
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "f0201cc7-2321-4400-96f0-1b911c9a0bb7",
        "type": "text/javascript",
        "exec": [
          "Utils ={",
          "    generateTimeStamp: function(){",
          "                        console.log(new Date());",
          "                        console.log((new Date()).getTime());",
          "                        console.log((new Date()).getTime()/1000);",
          "                        //var ts = Math.round((new Date()).getTime() / 1000);",
          "                        var ts = parseInt(new Date().getTime()/1000);",
          "                        return ts;",
          "                    },",
          "                    ",
          "    generateSignature: function(request_method,request_url,request_params,api_key,private_key,time_stamp){",
          "                                var str;",
          "                                var data=request_params||{};",
          "                                if(request_params===null){",
          "                                    str=request_method+request_url+\"\\n\"+api_key+\"\\n\"+time_stamp;",
          "                                }",
          "                                else{",
          "                                    //data=request_params;",
          "                                    data.ts=parseInt(new Date().getTime()/1000);",
          "                                    data.ak=api_key;",
          "                                    str=request_method+request_url+\"\\n\"+api_key+\"\\n\"+request_params+\"\\n\"+time_stamp;",
          "                                    //str=createConcatenatedString(request_url, data, request_method);",
          "                                }",
          "                        ",
          "                                var hash = CryptoJS.HmacSHA1(str, private_key);",
          "                                console.log(hash);",
          "                                var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);",
          "                                console.log(hashInBase64);",
          "                                    return hashInBase64;",
          "                                // var hash = CryptoJS.HmacSHA1(str, private_key).toString(CryptoJS.enc.Base64);",
          "                                // return hash;",
          "                                ",
          "                    }",
          "                    ",
          "    // createConcatenatedString:   function(url, data, requestMethod) {",
          "    //     var str = requestMethod;",
          "    //     str += url;",
          "    //     if(angular.isObject(data)) {",
          "    //         angular.forEach($filter('orderBy')(Object.keys(data)), function (key) {",
          "    //             str += \"\\n\";",
          "    //             str += data[key]",
          "    //         });",
          "    //     }",
          "    //     return str;",
          "    // }                ",
          "                    ",
          "};",
          "",
          "function createConcatenatedString (url, data, requestMethod) {",
          "        var str = requestMethod;",
          "        str += url;",
          "        if(angular.isObject(data)) {",
          "            angular.forEach($filter('orderBy')(Object.keys(data)), function (key) {",
          "                str += \"\\n\";",
          "                str += data[key];",
          "            });",
          "        }",
          "        return str;",
          "    }"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "7cb505a9-79a3-424c-8a17-8ef5d87677fd",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}