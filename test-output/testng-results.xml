<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
    <line>
      <![CDATA[Test Suite Initialized with the following properties]]>
    </line>
    <line>
      <![CDATA[****************************************************]]>
    </line>
    <line>
      <![CDATA[* testEnvironment -> production]]>
    </line>
    <line>
      <![CDATA[****************************************************]]>
    </line>
    <line>
      <![CDATA[Loading Test Configuration from: WeatherApiTest....]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="1218" started-at="2019-03-26T03:10:19Z" finished-at="2019-03-26T03:10:20Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="1218" started-at="2019-03-26T03:10:19Z" finished-at="2019-03-26T03:10:20Z">
      <class name="org.api.weather.test.apis.WeatherApiTest">
        <test-method status="PASS" signature="initializeSuite()[pri:0, instance:org.api.weather.test.apis.WeatherApiTest@6fadae5d]" name="initializeSuite" is-config="true" duration-ms="20" started-at="2019-03-26T08:40:19Z" finished-at="2019-03-26T08:40:19Z">
          <reporter-output>
            <line>
              <![CDATA[Test Suite Initialized with the following properties]]>
            </line>
            <line>
              <![CDATA[****************************************************]]>
            </line>
            <line>
              <![CDATA[* testEnvironment -> production]]>
            </line>
            <line>
              <![CDATA[****************************************************]]>
            </line>
          </reporter-output>
        </test-method> <!-- initializeSuite -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.api.weather.test.apis.WeatherApiTest@6fadae5d]" name="beforeClass" is-config="true" duration-ms="3" started-at="2019-03-26T08:40:19Z" finished-at="2019-03-26T08:40:19Z">
          <reporter-output>
            <line>
              <![CDATA[Loading Test Configuration from: WeatherApiTest....]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="getData()[pri:0, instance:org.api.weather.test.apis.WeatherApiTest@6fadae5d]" name="getData" is-config="true" duration-ms="1" started-at="2019-03-26T08:40:19Z" finished-at="2019-03-26T08:40:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method status="PASS" signature="init(java.lang.reflect.Method)[pri:0, instance:org.api.weather.test.apis.WeatherApiTest@6fadae5d]" name="init" is-config="true" duration-ms="13" started-at="2019-03-26T08:40:19Z" finished-at="2019-03-26T08:40:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.api.weather.test.apis.WeatherApiTest.verifyLocationName() throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="verifyLocationName()[pri:0, instance:org.api.weather.test.apis.WeatherApiTest@6fadae5d]" name="verifyLocationName" duration-ms="1155" started-at="2019-03-26T08:40:19Z" finished-at="2019-03-26T08:40:20Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[json string can not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: json string can not be null or empty
	at com.jayway.jsonpath.internal.Utils.notEmpty(Utils.java:256)
	at com.jayway.jsonpath.internal.JsonReader.parse(JsonReader.java:72)
	at com.jayway.jsonpath.JsonPath.read(JsonPath.java:485)
	at org.api.weather.test.apis.WeatherApiTest.verifyLocationName(WeatherApiTest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLocationName -->
      </class> <!-- org.api.weather.test.apis.WeatherApiTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
